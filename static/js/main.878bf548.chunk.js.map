{"version":3,"sources":["components/Search.tsx","App.tsx","index.js"],"names":["backendUrl","process","Search","imageFile","setImageFile","useState","imageMatches","setImageMatches","textQuery","setTextQuery","textMatches","setTextMatches","imageOod","setImageOod","textOod","setTextOod","loading","setLoading","imageBlobs","setImageBlobs","loadImageBlobs","async","newBlobs","Promise","all","matches","map","res","fetch","concat","match","path","headers","blob","URL","createObjectURL","err","console","warn","prev","_objectSpread","renderMatches","idx","_jsxs","className","style","border","borderRadius","marginBottom","padding","children","_jsx","src","alt","caption","maxWidth","maxHeight","rank","ood_score","toFixed","onSubmit","e","preventDefault","_data$query_ood_score","formData","FormData","append","method","body","mode","data","json","results","query_ood_score","alert","type","accept","onChange","_e$target$files","target","files","disabled","margin","_data$query_ood_score2","JSON","stringify","query","value","placeholder","App","Router","position","zIndex","role","Routes","Route","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.878bf548.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\n\nfunction oodColor(score: number, min: number, max: number) {\n  const norm = 1 - Math.max(0, Math.min(1, (score - min) / (max - min)));\n  const r = Math.round(255 * (1 - norm));\n  const g = Math.round(180 * norm + 75 * (1 - norm));\n  return `rgba(${r},${g},120,0.15)`;\n}\n\nconst Search: React.FC = () => {\n  const [imageFile, setImageFile] = useState<File | null>(null);\n  const [imageMatches, setImageMatches] = useState<any[]>([]);\n  const [textQuery, setTextQuery] = useState('');\n  const [textMatches, setTextMatches] = useState<any[]>([]);\n  const [imageOod, setImageOod] = useState<number | null>(null);\n  const [textOod, setTextOod] = useState<number | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [imageBlobs, setImageBlobs] = useState<Record<string, string>>({});\n\n  const OOD_MIN = 0;\n  const OOD_MAX = 20;\n\n  const loadImageBlobs = async (matches: any[]) => {\n    const newBlobs: Record<string, string> = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        try {\n          const res = await fetch(`${backendUrl}${match.path}`, {\n            headers: { 'ngrok-skip-browser-warning': 'true' }\n          });\n          const blob = await res.blob();\n          newBlobs[match.path] = URL.createObjectURL(blob);\n        } catch (err) {\n          console.warn(\"Failed to load image:\", match.path);\n        }\n      })\n    );\n    setImageBlobs((prev) => ({ ...prev, ...newBlobs }));\n  };\n\n  const handleImageUpload = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!imageFile) return;\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('image', imageFile);\n      const res = await fetch(`${backendUrl}/search_by_image`, {\n        method: 'POST',\n        body: formData,\n        headers: { 'ngrok-skip-browser-warning': 'true' },\n        mode: \"cors\"\n      });\n      const data = await res.json();\n      setImageMatches(data.results || []);\n      setImageOod(data.query_ood_score ?? null);\n      await loadImageBlobs(data.results || []);\n    } catch (err) {\n      alert('Image search failed.');\n    }\n    setLoading(false);\n  };\n\n  const handleTextSearch = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const res = await fetch(`${backendUrl}/search_by_text`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'ngrok-skip-browser-warning': 'true'\n        },\n        body: JSON.stringify({ query: textQuery }),\n        mode: \"cors\"\n      });\n      const data = await res.json();\n      setTextMatches(data.results || []);\n      setTextOod(data.query_ood_score ?? null);\n      await loadImageBlobs(data.results || []);\n    } catch (err) {\n      alert('Text search failed.');\n    }\n    setLoading(false);\n  };\n\n  const renderMatches = (matches: any[]) => (\n    matches.map((match, idx) => (\n      <div key={idx} className=\"result\" style={{\n        border: '1px solid #ccc',\n        borderRadius: '8px',\n        marginBottom: '1em',\n        padding: '1em'\n      }}>\n        {imageBlobs[match.path] && (\n          <img\n            src={imageBlobs[match.path]}\n            alt={match.caption}\n            style={{ maxWidth: 400, maxHeight: 400, borderRadius: 12, marginBottom: '0.5em' }}\n          />\n        )}\n        <div>Rank: {match.rank}</div>\n        <div>Caption: {match.caption}</div>\n        <div><strong>OOD Score:</strong> {match.ood_score.toFixed(2)}</div>\n      </div>\n    ))\n  );\n\n  return (\n    <div>\n      <div className=\"sensei-card\">\n        <h2>Search by Image</h2>\n        <form onSubmit={handleImageUpload}>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={e => setImageFile(e.target.files?.[0] || null)}\n          />\n          <button className=\"sensei-btn\" type=\"submit\" disabled={loading}>Upload & Search</button>\n        </form>\n        {imageOod !== null && (\n          <div style={{ margin: '1em 0' }}>\n            <strong>Query OOD Score:</strong> {imageOod.toFixed(2)}\n          </div>\n        )}\n        {renderMatches(imageMatches)}\n      </div>\n\n      <div className=\"sensei-card\">\n        <h2>Search by Text</h2>\n        <form onSubmit={handleTextSearch}>\n          <input\n            type=\"text\"\n            value={textQuery}\n            onChange={e => setTextQuery(e.target.value)}\n            placeholder=\"Enter your query...\"\n          />\n          <button className=\"sensei-btn\" type=\"submit\" disabled={loading}>Search</button>\n        </form>\n        {textOod !== null && (\n          <div style={{ margin: '1em 0' }}>\n            <strong>Query OOD Score:</strong> {textOod.toFixed(2)}\n          </div>\n        )}\n        {renderMatches(textMatches)}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Search from './components/Search';\nimport './sensei-theme.css';\n\nconst App: React.FC = () => {\n    return (\n        <Router>\n            <div className=\"sensei-splash-bg\"></div>\n            <div className=\"sensei-splash-overlay\"></div>\n            <div style={{ position: 'relative', zIndex: 2 }}>\n                <header className=\"sensei-header\">\n                    <span role=\"img\" aria-label=\"ninja\">🥷</span> Sens-AI-Search\n                    <div className=\"sensei-subheader\">\n                        Find images by text or upload, powered by AI <span role=\"img\" aria-label=\"spark\">✨</span>\n                    </div>\n                </header>\n                <Routes>\n                    <Route path=\"/\" element={<Search />} />\n                </Routes>\n                 <Routes>\n                    <Route path=\"/sens-AI-search\" element={<Search />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;","// filepath: /Users/pankajsharma/PycharmProjects/SenseiSearch/image-retrieval-ui/src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}