{"version":3,"sources":["components/Search.tsx","App.tsx","index.js"],"names":["backendUrl","Search","imageFile","setImageFile","useState","imageMatches","setImageMatches","textQuery","setTextQuery","textMatches","setTextMatches","loading","setLoading","imageOod","setImageOod","textOod","setTextOod","_jsxs","children","className","_jsx","onSubmit","async","e","preventDefault","_data$query_ood_score","formData","FormData","append","res","fetch","concat","method","body","data","json","results","query_ood_score","err","alert","type","accept","onChange","_e$target$files","target","files","disabled","style","margin","toFixed","map","match","idx","border","borderRadius","marginBottom","padding","path","src","alt","maxWidth","maxHeight","rank","caption","ood_score","_data$query_ood_score2","headers","JSON","stringify","query","value","placeholder","App","Router","position","zIndex","role","Routes","Route","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da6db816.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst backendUrl = 'http://localhost:8001';\n\n// Helper to map OOD score to a green-red color (lower = greener, higher = redder)\nfunction oodColor(score: number, min: number, max: number) {\n  // Flip: low OOD = green, high OOD = red\n  const norm = 1 - Math.max(0, Math.min(1, (score - min) / (max - min)));\n  const r = Math.round(255 * (1 - norm));\n  const g = Math.round(180 * norm + 75 * (1 - norm));\n  return `rgba(${r},${g},120,0.15)`;\n}\n\nconst Search: React.FC = () => {\n  const [imageFile, setImageFile] = useState<File | null>(null);\n  const [imageMatches, setImageMatches] = useState<any[]>([]);\n  const [textQuery, setTextQuery] = useState('');\n  const [textMatches, setTextMatches] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [imageOod, setImageOod] = useState<number | null>(null);\n  const [textOod, setTextOod] = useState<number | null>(null);\n\n  // For demo, set min/max OOD for color mapping (adjust as needed)\n  const OOD_MIN = 0;\n  const OOD_MAX = 20;\n\n  const handleImageUpload = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!imageFile) return;\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('image', imageFile);\n      const res = await fetch(`${backendUrl}/search_by_image`, {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await res.json();\n      setImageMatches(data.results || []);\n      setImageOod(data.query_ood_score ?? null);\n    } catch (err) {\n      alert('Image search failed.');\n    }\n    setLoading(false);\n  };\n\n  const handleTextSearch = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const res = await fetch(`${backendUrl}/search_by_text`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query: textQuery }),\n      });\n      const data = await res.json();\n      setTextMatches(data.results || []);\n      setTextOod(data.query_ood_score ?? null);\n    } catch (err) {\n      alert('Text search failed.');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <div className=\"sensei-card\">\n        <h2>Search by Image</h2>\n        <form onSubmit={handleImageUpload}>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={e => setImageFile(e.target.files?.[0] || null)}\n          />\n          <button className=\"sensei-btn\" type=\"submit\" disabled={loading}>Upload & Search</button>\n        </form>\n        {imageOod !== null && (\n          <div style={{margin: '1em 0'}}>\n            <strong>Query OOD Score:</strong> {imageOod.toFixed(2)}\n          </div>\n        )}\n        <div>\n          {imageMatches.map((match, idx) => (\n            <div\n              key={idx}\n              className=\"result\"\n              style={{\n                border: '1px solid #ccc',\n                borderRadius: '8px',\n                marginBottom: '1em',\n                padding: '1em'\n              }}\n            >\n              {match.path && (\n                <img\n                  src={backendUrl + match.path}\n                  alt=\"\"\n                  style={{ maxWidth: 400, maxHeight: 400, borderRadius: 12, marginBottom: '0.5em' }}\n                />\n              )}\n              <div>Rank: {match.rank}</div>\n              <div>Caption: {match.caption}</div>\n              <div>\n                <strong>OOD Score:</strong> {match.ood_score.toFixed(2)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"sensei-card\">\n        <h2>Search by Text</h2>\n        <form onSubmit={handleTextSearch}>\n          <input\n            type=\"text\"\n            value={textQuery}\n            onChange={e => setTextQuery(e.target.value)}\n            placeholder=\"Enter your query...\"\n          />\n          <button className=\"sensei-btn\" type=\"submit\" disabled={loading}>Search</button>\n        </form>\n        {textOod !== null && (\n          <div style={{margin: '1em 0'}}>\n            <strong>Query OOD Score:</strong> {textOod.toFixed(2)}\n          </div>\n        )}\n        <div>\n          {textMatches.map((match, idx) => (\n            <div\n              key={idx}\n              className=\"result\"\n              style={{\n                border: '1px solid #ccc',\n                borderRadius: '8px',\n                marginBottom: '1em',\n                padding: '1em'\n              }}\n            >\n              {match.path && (\n                <img\n                  src={backendUrl + match.path}\n                  alt=\"\"\n                  style={{ maxWidth: 400, maxHeight: 400, borderRadius: 12, marginBottom: '0.5em' }}\n                />\n              )}\n              <div>Rank: {match.rank}</div>\n              <div>Caption: {match.caption}</div>\n              <div>\n                <strong>OOD Score:</strong> {match.ood_score.toFixed(2)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Search from './components/Search';\nimport './sensei-theme.css';\n\nconst App: React.FC = () => {\n    return (\n        <Router>\n            <div className=\"sensei-splash-bg\"></div>\n            <div className=\"sensei-splash-overlay\"></div>\n            <div style={{ position: 'relative', zIndex: 2 }}>\n                <header className=\"sensei-header\">\n                    <span role=\"img\" aria-label=\"ninja\">ðŸ¥·</span> Sens-AI-Search\n                    <div className=\"sensei-subheader\">\n                        Find images by text or upload, powered by AI <span role=\"img\" aria-label=\"spark\">âœ¨</span>\n                    </div>\n                </header>\n                <Routes>\n                    <Route path=\"/\" element={<Search />} />\n                </Routes>\n                 <Routes>\n                    <Route path=\"/sens-AI-search\" element={<Search />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;","// filepath: /Users/pankajsharma/PycharmProjects/SenseiSearch/image-retrieval-ui/src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}